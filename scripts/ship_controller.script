go.property("kills", 0)

local camera = require "orthographic.camera"

local function create_gun(vector)
	local props = {}
	props[hash("/gun")] = { parent_go = go.get_id() }
	collectionfactory.create("#gun_factory",go.get_position() + vector, nil, props)
end

function init(self)
	go.animate("body#sprite", "tint", go.PLAYBACK_ONCE_PINGPONG, vmath.vector4(2, 2, 2, 1), go.EASING_LINEAR, 0.3)
	msg.post(".", "acquire_input_focus")
	physics.set_maskbit("#collisionobject", "enemy", false)
	create_gun(vmath.vector3(0, 0, 0))
	timer.delay(2, false, function(self)
		physics.set_maskbit("#collisionobject", "enemy", true)
		go.cancel_animations("body#sprite", "tint")
		go.set("body#sprite", "tint", vmath.vector4(1))
	end)
end

function on_message(self, message_id, message, sender)	
	if message_id == hash("hit") then
		print(sender)
	end
	if message_id == hash("kill") then
		self.kills = self.kills + 1
		if self.kills == 4 then
			create_gun(vmath.vector3(35, 0, 0))
			create_gun(vmath.vector3(-35, 0, 0))
		end
	end
end

function on_input(self, action_id, action)
	if action_id == hash("touch") then
		local position = camera.screen_to_world(hash("/camera"), vmath.vector3(action.x ,action.y , 0 ))
		go.set_position(position,go.get_parent("."))
	end
end

function final(self)
	msg.post("/game_manager#game", "ship_death")
end